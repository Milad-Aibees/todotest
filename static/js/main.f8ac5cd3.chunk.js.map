{"version":3,"sources":["components/Header.jsx","constants/index.js","contexts/TaskListContext.js","components/taskList/Task.jsx","components/taskList/TaskList.jsx","hooks/useFormValidate.js","components/taskForm/TaskForm.jsx","components/taskView/TaskView.jsx","components/taskList/DoneTasksList.jsx","components/taskForm/Modal.jsx","components/App.jsx","index.js"],"names":["Header","Typography","sx","mt","align","variant","modalType","radioButtons","value","color","green","yellow","red","bulletCollor","priority","TaskListContext","createContext","TaskListContextProvider","props","initialState","JSON","parse","localStorage","getItem","useState","tasks","setTasks","useEffect","setItem","stringify","type","openModal","setOpenModal","editItem","setEditItem","viewItem","setViewItem","Provider","addTask","title","description","isComplete","id","uuidv4","findTask","task","find","editTask","newTasks","map","doneTask","deleteTask","filter","children","Task","useContext","Card","display","width","CardContent","flexDirection","Box","onClick","component","alignItems","justifyContent","fontSize","ml","Button","minWidth","TaskList","completeTasks","renderTask","flexWrap","length","Fab","position","bottom","right","useFormValidate","initialFormValues","formSubmitted","success","values","setValues","errors","setErrors","handleInputValue","e","target","name","fieldValues","temp","validate","formIsValid","isValid","Object","every","x","TaskForm","setPriority","setTitle","setDescription","handleRadioChange","event","handleInputChange","renderRadioButtonFields","item","FormControlLabel","control","Radio","checked","onChange","inputProps","label","onSubmit","preventDefault","TextField","onBlur","autoComplete","fullWidth","error","helperText","multiline","rows","RadioGroup","row","disabled","TaskView","mr","flexGrow","textAlign","size","DoneTasksList","randerDoneTasks","Modal","Dialog","maxWidth","open","onClose","DialogContent","App","Container","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f8ac5cd3.chunk.js","sourcesContent":["import React, { useContext } from \"react\";\r\nimport Typography from \"@mui/material/Typography\";\r\nexport const Header = () => {\r\n  return (\r\n    <Typography sx={{ mt: 8 }} align=\"center\" variant=\"h3\">\r\n      Todo List\r\n    </Typography>\r\n  );\r\n};\r\n","import { red, yellow, green } from \"@mui/material/colors\";\r\n\r\nexport const modalType = {\r\n  add: \"ADD\",\r\n  edit: \"EDIT\",\r\n  view: \"VIEW\",\r\n  done: \"DONE\",\r\n};\r\n\r\nexport const radioButtons = [\r\n  { value: \"LOW\", color: green },\r\n  { value: \"MEDIUM\", color: yellow },\r\n  { value: \"HIGH\", color: red },\r\n];\r\n\r\nexport const bulletCollor = (priority) => {\r\n  switch (priority) {\r\n    case \"LOW\":\r\n      return green[600];\r\n    case \"MEDIUM\":\r\n      return yellow[600];\r\n    default:\r\n      return red[600];\r\n  }\r\n};\r\n","import React, { createContext, useState, useEffect } from \"react\";\r\nimport { modalType } from \"../constants\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nexport const TaskListContext = createContext();\r\nexport const TaskListContextProvider = (props) => {\r\n  const initialState = JSON.parse(localStorage.getItem(\"tasks\")) || [];\r\n\r\n  const [tasks, setTasks] = useState(initialState);\r\n  useEffect(() => {\r\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\r\n  }, [tasks]);\r\n  const [openModal, setOpenModal] = useState({\r\n    value: false,\r\n    type: modalType.add,\r\n  });\r\n  const [editItem, setEditItem] = useState(null);\r\n\r\n  const [viewItem, setViewItem] = useState(null);\r\n\r\n  const addTask = (title, description, priority) => {\r\n    setTasks([\r\n      ...tasks,\r\n      { title, description, priority, isComplete: false, id: uuidv4() },\r\n    ]);\r\n    setOpenModal({\r\n      value: false,\r\n      type: modalType.add,\r\n    });\r\n  };\r\n\r\n  // Find task\r\n  const findTask = (id, type) => {\r\n    const task = tasks.find((task) => task.id === id);\r\n    type === modalType.edit ? setEditItem(task) : setViewItem(task);\r\n  };\r\n\r\n  // Edit task\r\n  const editTask = (title, description, priority, isComplete, id) => {\r\n    const newTasks = tasks.map((task) =>\r\n      task.id === id ? { title, description, priority, isComplete, id } : task\r\n    );\r\n\r\n    setTasks(newTasks);\r\n    setOpenModal({\r\n      value: false,\r\n      type: modalType.edit,\r\n    });\r\n    setEditItem(null);\r\n  };\r\n\r\n  const doneTask = (id) => {\r\n    const newTasks = tasks.map((task) =>\r\n      task.id === id ? { ...task, isComplete: true } : task\r\n    );\r\n    setTasks(newTasks);\r\n    setOpenModal({\r\n      value: false,\r\n    });\r\n  };\r\n\r\n  const deleteTask = (id) => {\r\n    setTasks(tasks.filter((task) => task.id !== id));\r\n    setOpenModal({\r\n      value: false,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <TaskListContext.Provider\r\n      value={{\r\n        tasks,\r\n        openModal,\r\n        setOpenModal,\r\n        addTask,\r\n        findTask,\r\n        editTask,\r\n        editItem,\r\n        viewItem,\r\n        doneTask,\r\n        deleteTask,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </TaskListContext.Provider>\r\n  );\r\n};\r\n","import React, { useEffect, useContext } from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Brightness1Icon from \"@mui/icons-material/Brightness1\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { TaskListContext } from \"../../contexts/TaskListContext\";\r\nimport { modalType, bulletCollor } from \"../../constants\";\r\n\r\nexport const Task = ({ title, description, priority, isComplete, id }) => {\r\n  const { findTask, setOpenModal, doneTask } = useContext(TaskListContext);\r\n\r\n  const handleEditTask = () => {\r\n    findTask(id, modalType.edit);\r\n    setOpenModal({ value: true, type: modalType.edit });\r\n  };\r\n\r\n  const handleViewTask = () => {\r\n    findTask(id, modalType.view);\r\n    setOpenModal({ value: true, type: modalType.view });\r\n  };\r\n\r\n  return (\r\n    <Card sx={{ display: \"flex\", width: \"700px\", mt: \"16px\" }}>\r\n      <CardContent\r\n        sx={{ display: \"flex\", width: \"100%\", flexDirection: \"row\" }}\r\n      >\r\n        <Box sx={{ width: \"100%\" }} onClick={() => handleViewTask()}>\r\n          <Typography component=\"div\" variant=\"h5\">\r\n            {title}\r\n          </Typography>\r\n          <Typography\r\n            variant=\"subtitle1\"\r\n            color=\"text.secondary\"\r\n            component=\"div\"\r\n            sx={{ mt: 2 }}\r\n          >\r\n            {description}\r\n          </Typography>\r\n        </Box>\r\n        <Box>\r\n          <Box\r\n            sx={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"flex-end\",\r\n            }}\r\n          >\r\n            <Typography fontSize={12} component=\"span\">\r\n              {priority}\r\n            </Typography>\r\n            <Brightness1Icon sx={{ color: bulletCollor(priority), ml: 1 }} />\r\n          </Box>\r\n          {!isComplete && (\r\n            <Box sx={{ display: \"flex\", mt: 2, alignItems: \"center\" }}>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"error\"\r\n                sx={{ minWidth: \"110px\" }}\r\n                onClick={() => doneTask(id)}\r\n              >\r\n                Done Task\r\n              </Button>\r\n              <Button\r\n                sx={{ minWidth: \"110px\", ml: 1 }}\r\n                variant=\"contained\"\r\n                color=\"success\"\r\n                onClick={() => handleEditTask()}\r\n              >\r\n                Edit Task\r\n              </Button>\r\n            </Box>\r\n          )}\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Box from \"@mui/material/Box\";\r\nimport { TaskListContext } from \"../../contexts/TaskListContext\";\r\nimport { modalType } from \"../../constants\";\r\nimport { Task } from \"./Task\";\r\nimport Fab from \"@mui/material/Fab\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\n\r\nexport const TaskList = () => {\r\n  const { tasks, setOpenModal } = useContext(TaskListContext);\r\n  const completeTasks = tasks.filter((task) => task.isComplete === true);\r\n  const renderTask = tasks.map((task) => {\r\n    if (!task.isComplete) {\r\n      return (\r\n        <Task\r\n          key={task.id}\r\n          title={task.title}\r\n          description={task.description}\r\n          priority={task.priority}\r\n          id={task.id}\r\n        />\r\n      );\r\n    }\r\n    return <div key={task.id}></div>;\r\n  });\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        mt: 16,\r\n        flexWrap: \"wrap\",\r\n      }}\r\n    >\r\n      {completeTasks.length > 0 && (\r\n        <Box sx={{ width: \"700px\" }}>\r\n          <Button\r\n            variant=\"contained\"\r\n            onClick={() => setOpenModal({ value: true, type: modalType.done })}\r\n          >\r\n            View Done Tasks\r\n          </Button>\r\n        </Box>\r\n      )}\r\n      {tasks.length > 0 ? (\r\n        <>\r\n          {renderTask}\r\n          <Fab\r\n            sx={{ position: \"fixed\", bottom: \"50px\", right: \"100px\" }}\r\n            onClick={() => setOpenModal({ value: true, type: modalType.add })}\r\n            color=\"primary\"\r\n            aria-label=\"add\"\r\n          >\r\n            <AddIcon />\r\n          </Fab>\r\n        </>\r\n      ) : (\r\n        <Button\r\n          variant=\"contained\"\r\n          onClick={() => setOpenModal({ value: true, type: modalType.add })}\r\n        >\r\n          Create Your First Task\r\n        </Button>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n","import { useState, useContext } from \"react\";\r\nimport { TaskListContext } from \"../contexts/TaskListContext\";\r\n\r\nexport const useFormValidate = () => {\r\n  const { editItem } = useContext(TaskListContext);\r\n  const initialFormValues = {\r\n    title: editItem?.title || \"\",\r\n    description: editItem?.description || \"\",\r\n    formSubmitted: false,\r\n    success: false,\r\n  };\r\n\r\n  const [values, setValues] = useState(initialFormValues);\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors };\r\n\r\n    if (\"title\" in fieldValues) {\r\n      temp.title = fieldValues.title ? \"\" : \"This field is required.\";\r\n    }\r\n\r\n    if (\"description\" in fieldValues) {\r\n      temp.description = fieldValues.description\r\n        ? \"\"\r\n        : \"This field is required.\";\r\n    }\r\n\r\n    setErrors({\r\n      ...temp,\r\n    });\r\n  };\r\n\r\n  const handleInputValue = (e) => {\r\n    const { name, value } = e.target;\r\n    setValues({\r\n      ...values,\r\n      [name]: value,\r\n    });\r\n    validate({ [name]: value });\r\n  };\r\n\r\n  const formIsValid = (fieldValues = values) => {\r\n    const isValid =\r\n      fieldValues.title &&\r\n      fieldValues.description &&\r\n      Object.values(errors).every((x) => x === \"\");\r\n\r\n    return isValid;\r\n  };\r\n  return {\r\n    handleInputValue,\r\n    formIsValid,\r\n    errors,\r\n  };\r\n};\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport RadioGroup from \"@mui/material/RadioGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Radio from \"@mui/material/Radio\";\r\nimport Button from \"@mui/material/Button\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { TaskListContext } from \"../../contexts/TaskListContext\";\r\nimport { useFormValidate } from \"../../hooks/useFormValidate\";\r\nimport { radioButtons, modalType } from \"../../constants\";\r\n\r\nexport const TaskForm = () => {\r\n  const [priority, setPriority] = useState(\"LOW\");\r\n  const [title, setTitle] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const { addTask, openModal, editItem, editTask } =\r\n    useContext(TaskListContext);\r\n  const { handleInputValue, formIsValid, errors } = useFormValidate();\r\n\r\n  useEffect(() => {\r\n    if (editItem) {\r\n      setTitle(editItem.title);\r\n      setDescription(editItem.description);\r\n      setPriority(editItem.priority);\r\n    }\r\n  }, [editItem]);\r\n\r\n  const handleRadioChange = (event) => {\r\n    setPriority(event.target.value);\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    handleInputValue(e);\r\n    e.target.name === \"title\"\r\n      ? setTitle(e.target.value)\r\n      : setDescription(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // check modal is in edit mode or add mode\r\n    if (openModal.type === modalType.add) {\r\n      addTask(title, description, priority);\r\n    } else {\r\n      editTask(title, description, priority, editItem.isComplete, editItem.id);\r\n    }\r\n  };\r\n\r\n  const controlProps = (item) => ({\r\n    checked: priority === item,\r\n    onChange: handleRadioChange,\r\n    value: item,\r\n    name: \"color-radio-button-demo\",\r\n    inputProps: { \"aria-label\": item },\r\n  });\r\n\r\n  const renderRadioButtonFields = radioButtons.map(({ value, color }) => {\r\n    return (\r\n      <FormControlLabel\r\n        key={value}\r\n        value={value}\r\n        control={\r\n          <Radio\r\n            {...controlProps(value)}\r\n            sx={{\r\n              \"&.Mui-checked\": {\r\n                color: color[600],\r\n              },\r\n            }}\r\n          />\r\n        }\r\n        label={value}\r\n      />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <TextField\r\n        value={title}\r\n        onBlur={handleInputValue}\r\n        onChange={(e) => handleInputChange(e)}\r\n        name=\"title\"\r\n        label=\"Task Title\"\r\n        autoComplete=\"none\"\r\n        fullWidth\r\n        sx={{ mt: 2 }}\r\n        variant=\"standard\"\r\n        {...(errors[\"title\"] && {\r\n          error: true,\r\n          helperText: errors[\"title\"],\r\n        })}\r\n      />\r\n      <TextField\r\n        value={description}\r\n        onBlur={handleInputValue}\r\n        onChange={(e) => handleInputChange(e)}\r\n        name=\"description\"\r\n        label=\"Task Description\"\r\n        multiline\r\n        rows={2}\r\n        autoComplete=\"none\"\r\n        fullWidth\r\n        sx={{ mt: 2 }}\r\n        variant=\"standard\"\r\n        {...(errors[\"description\"] && {\r\n          error: true,\r\n          helperText: errors[\"description\"],\r\n        })}\r\n      />\r\n\r\n      <RadioGroup\r\n        aria-label=\"gender\"\r\n        name=\"controlled-radio-buttons-group\"\r\n        value={priority}\r\n        onChange={handleRadioChange}\r\n        row\r\n        sx={{ justifyContent: \"space-between\", mt: 2 }}\r\n      >\r\n        {renderRadioButtonFields}\r\n      </RadioGroup>\r\n\r\n      <Box sx={{ display: \"flex\", justifyContent: \"center\", mt: 4 }}>\r\n        <Button disabled={!formIsValid()} type=\"submit\">\r\n          {openModal.type === modalType.add ? \"ADD TO TASKS\" : \"EDIT TASK\"}\r\n        </Button>\r\n      </Box>\r\n    </form>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport { TaskListContext } from \"../../contexts/TaskListContext\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Brightness1Icon from \"@mui/icons-material/Brightness1\";\r\nimport { bulletCollor, modalType } from \"../../constants\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nexport const TaskView = () => {\r\n  const { viewItem, findTask, setOpenModal, doneTask, deleteTask } =\r\n    useContext(TaskListContext);\r\n\r\n  const handleEditTask = () => {\r\n    findTask(viewItem.id, modalType.edit);\r\n    setOpenModal({ value: true, type: modalType.edit });\r\n  };\r\n  return (\r\n    <Box sx={{ width: \"500px\" }}>\r\n      <Box sx={{ display: \"flex\", position: \"relative\" }}>\r\n        <Box\r\n          sx={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            position: \"absolute\",\r\n          }}\r\n        >\r\n          <Brightness1Icon\r\n            sx={{ color: bulletCollor(viewItem.priority), mr: 1 }}\r\n          />\r\n          <Typography fontSize={12} component=\"span\">\r\n            {viewItem.priority}\r\n          </Typography>\r\n        </Box>\r\n        <Box\r\n          sx={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            flexGrow: \"1\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          <Typography fontSize={16} component=\"h3\">\r\n            {viewItem.title}\r\n          </Typography>\r\n        </Box>\r\n      </Box>\r\n      <Box sx={{ width: \"80%\", textAlign: \"center\", mt: 1 }}>\r\n        <p>{viewItem.description}</p>\r\n      </Box>\r\n\r\n      <Box sx={{ mt: 4, display: \"flex\", justifyContent: \"space-between\" }}>\r\n        <Button\r\n          color=\"success\"\r\n          size=\"small\"\r\n          variant=\"contained\"\r\n          onClick={() => handleEditTask()}\r\n        >\r\n          Edit Task\r\n        </Button>\r\n        <Button\r\n          size=\"small\"\r\n          variant=\"contained\"\r\n          onClick={() => doneTask(viewItem.id)}\r\n        >\r\n          Done Task\r\n        </Button>\r\n        <Button\r\n          color=\"error\"\r\n          size=\"small\"\r\n          variant=\"contained\"\r\n          onClick={() => deleteTask(viewItem.id)}\r\n        >\r\n          Delete Task\r\n        </Button>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n","import { Typography } from \"@mui/material\";\r\nimport React, { useContext } from \"react\";\r\nimport { TaskListContext } from \"../../contexts/TaskListContext\";\r\nimport { Task } from \"./Task\";\r\n\r\nexport const DoneTasksList = () => {\r\n  const { tasks } = useContext(TaskListContext);\r\n  const completeTasks = tasks.filter((task) => task.isComplete === true);\r\n  const randerDoneTasks = completeTasks.map((task) => {\r\n    return (\r\n      <Task\r\n        key={task.id}\r\n        title={task.title}\r\n        description={task.description}\r\n        priority={task.priority}\r\n        id={task.id}\r\n        isComplete={task.isComplete}\r\n      />\r\n    );\r\n  });\r\n  return (\r\n    <div>\r\n      <Typography sx={{ textAlign: \"center\" }} variant=\"h4\">\r\n        Done Taks\r\n      </Typography>\r\n      {randerDoneTasks}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport { TaskForm } from \"./TaskForm\";\r\nimport { TaskListContext } from \"../../contexts/TaskListContext\";\r\nimport { modalType } from \"../../constants\";\r\nimport { TaskView } from \"../taskView/TaskView\";\r\nimport { DoneTasksList } from \"../taskList/DoneTasksList\";\r\n\r\nconst Modal = () => {\r\n  const { openModal, setOpenModal } = useContext(TaskListContext);\r\n  const modalContent = () => {\r\n    if (openModal.type === modalType.view) {\r\n      return <TaskView />;\r\n    } else if (openModal.type === modalType.done) {\r\n      return <DoneTasksList />;\r\n    } else if (\r\n      openModal.type === modalType.add ||\r\n      openModal.type === modalType.edit\r\n    ) {\r\n      return <TaskForm />;\r\n    }\r\n    return <div></div>;\r\n  };\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        maxWidth=\"xl\"\r\n        open={openModal.value}\r\n        onClose={() => setOpenModal({ value: false })}\r\n      >\r\n        <DialogContent>{modalContent()}</DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React from \"react\";\r\nimport Container from \"@mui/material/Container\";\r\nimport { Header } from \"./Header\";\r\nimport { TaskList } from \"./taskList/TaskList\";\r\nimport Modal from \"./taskForm/Modal\";\r\nimport { TaskListContextProvider } from \"../contexts/TaskListContext\";\r\nexport const App = () => {\r\n  return (\r\n    <TaskListContextProvider>\r\n      <Container>\r\n        <Header />\r\n        <TaskList />\r\n        <Modal />\r\n      </Container>\r\n    </TaskListContextProvider>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { App } from \"./components/App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}